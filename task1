**Task 1: Scan Your Local Network for Open Ports**

---

### 🔍 Objective:

To discover active devices on the local network and identify their open ports using Nmap. This helps in assessing possible entry points in a network for security testing.

---

### 🔧 Tools Used:

* **Nmap** (for port scanning)
* **Wireshark** (for optional packet analysis)
* **Kali Linux** (Virtual Machine environment)

---

### ✅ Steps Performed:

#### 1. Find Local IP and Network Range:

**Command Used:**

```bash
ifconfig
```

**Output:**

* IP Address: `192.168.201.131`
* Subnet Mask: `255.255.255.0`
* IP Range: `192.168.201.0/24`

#### 2. Run Nmap TCP SYN Scan:

**Command Used:**

```bash
nmap -sS 192.168.201.0/24
```

#### 3. Observed Output:

| IP Address      | Status  | Open Port(s) | Service | MAC Address                  |
| --------------- | ------- | ------------ | ------- | ---------------------------- |
| 192.168.201.1   | Host Up | 3306         | MySQL   | 00:50:56\:C0:00:08 (VMware)  |
| 192.168.201.2   | Host Up | 53           | DNS     | 00:50:56\:F3:5E\:B6 (VMware) |
| 192.168.201.254 | Host Up | None         | -       | 00:50:56\:F9:90\:B2 (VMware) |
| 192.168.201.131 | Host Up | None         | -       | (Your IP)                    |

Total Active Hosts Found: **4**

---

### 📊 Optional: Wireshark Analysis

#### Steps:

1. Open **Wireshark**.
2. Select network interface (e.g., eth0).
3. Start capturing.
4. Run Nmap scan during capture.
5. Apply filter:

```bash
tcp.flags.syn == 1 && tcp.flags.ack == 0
```

6. Review SYN packets to observe open/filtered ports.

---

### 🤞 Common Services on Detected Ports

| Port | Service | Description                                                                       |
| ---- | ------- | --------------------------------------------------------------------------------- |
| 3306 | MySQL   | Open-source relational database, vulnerable if exposed or misconfigured.          |
| 53   | DNS     | Resolves domain names to IPs. Can be exploited for reconnaissance or DNS attacks. |

---

### ⚡ Risks & Mitigations

#### Port 3306 - MySQL

| Risk                      | Mitigation                                |
| ------------------------- | ----------------------------------------- |
| Unauthorized access       | Restrict IPs, use firewalls               |
| Weak credentials          | Use strong passwords, disable remote root |
| Outdated version exploits | Regular updates                           |

#### Port 53 - DNS

| Risk                          | Mitigation                                   |
| ----------------------------- | -------------------------------------------- |
| DNS Amplification attacks     | Disable open recursion                       |
| Information leaks (Zone Xfer) | Disable zone transfers from unauthorized IPs |

---

### 🔢 Result Summary:

* Scanned Range: `192.168.201.0/24`
* Total Hosts Detected: `4`
* Services Found: MySQL on 3306, DNS on 53
* Risk Identified: Potential exposure of critical services

> 📄 **Conclusion:**
> This task demonstrated the process of identifying network devices and analyzing their open ports. These services, if not secured, could be exploited by attackers. Monitoring and proper access control are essential.
